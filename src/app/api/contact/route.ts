import { getStrapiURL } from '@/utils/get-strapi-url'
import { sendTelegramMessage } from '@/utils/sendTelegramMessage'

import { NextResponse } from 'next/server'

export async function POST(request: Request) {
	try {
		const { name, phone, message } = await request.json()

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Strapi
		const res = await fetch(getStrapiURL('contacts'), {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({ data: { name, phone, message } }),
		})

		if (!res.ok) {
			const errorData = await res.json()
			return NextResponse.json({ error: errorData.message }, { status: 500 })
		}

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
		const telegramMessage = `
üì¨ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞:
üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message || '‚Äî'}
    `
		await sendTelegramMessage(telegramMessage)

		return NextResponse.json({ success: true })
	} catch (e) {
		console.error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', e)
		return NextResponse.json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 })
	}
}
